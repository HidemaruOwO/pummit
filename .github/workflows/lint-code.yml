name: "Lint and Format"

on:
  workflow_dispatch: ~
  push:
    paths:
      - "src/**"
    branches:
      - "develop"

permissions:
  contents: write
  repository-projects: write
  actions: write
  statuses: read

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Wait Tests
        id: test_result
        uses: Sibz/await-status-action@v1.0.1
        with:
          contexts: test-status
          authToken: ${{ secrets.GITHUB_TOKEN }}
          timeout: 30
      - name: Check Test Result
        if: steps.test_result.outputs.result != 'success'
        run: |
          echo "feiled ${{ steps.test_result.outputs.failedCheckNames }}"
          echo "status ${{ steps.test_result.outputs.failedCheckStates }}"
          exit 1

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract branch name
        # actionlint ignore=SC2086
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        shell: bash
        id: extract_branch

      - name: Setup
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"

      - name: Format code
        uses: golangci/golangci-lint-action@v3
        with:
          args: --fix

      - run: git config --global user.name "github-actions"
      - run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - run: git stash
      - run: git checkout ${{ steps.extract_branch.outputs.branch }} && git pull
      - run: git stash pop || true

      - name: Commit
        # actionlint ignore=SC2015
        run: git add -u && git commit -m 'ðŸ‘€ Format Code' || true

      - name: Push
        run: git push --set-upstream --force origin ${{ steps.extract_branch.outputs.branch }}
